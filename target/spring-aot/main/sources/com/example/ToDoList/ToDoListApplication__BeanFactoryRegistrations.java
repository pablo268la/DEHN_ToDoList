package com.example.ToDoList;

import com.example.ToDoList.commands.CreateTaskCommand__BeanDefinitions;
import com.example.ToDoList.commands.DeleteTaskCommand__BeanDefinitions;
import com.example.ToDoList.commands.FindTaskCommand__BeanDefinitions;
import com.example.ToDoList.commands.ListTasksCommand__BeanDefinitions;
import com.example.ToDoList.commands.UpdateTaskCommand__BeanDefinitions;
import com.example.ToDoList.config.JacksonConfig__BeanDefinitions;
import com.example.ToDoList.service.ToDoService__BeanDefinitions;
import org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator__BeanDefinitions;
import org.springframework.aot.generate.Generated;
import org.springframework.beans.factory.support.DefaultListableBeanFactory;
import org.springframework.boot.autoconfigure.AutoConfigurationPackages__BeanDefinitions;
import org.springframework.boot.autoconfigure.aop.AopAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.LifecycleProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.reactor.ReactorProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.ssl.SslProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutionProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations__BeanDefinitions;
import org.springframework.boot.autoconfigure.task.TaskSchedulingProperties__BeanDefinitions;
import org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration__BeanDefinitions;
import org.springframework.boot.context.properties.BoundConfigurationProperties__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBinder__BeanDefinitions;
import org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor__BeanDefinitions;
import org.springframework.boot.jackson.JsonMixinModuleEntries__BeanDefinitions;
import org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer__BeanDefinitions;
import org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter__BeanDefinitions;
import org.springframework.context.event.DefaultEventListenerFactory__BeanDefinitions;
import org.springframework.context.event.EventListenerMethodProcessor__BeanDefinitions;
import org.springframework.shell.boot.ApplicationRunnerAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.CommandCatalogAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.CompleterAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.ComponentFlowAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.ExitCodeAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.JLineAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.JLineShellAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.LineReaderAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.ParameterResolverAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.ShellContextAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.ShellRunnerAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.SpringShellAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.SpringShellProperties__BeanDefinitions;
import org.springframework.shell.boot.StandardAPIAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.StandardCommandsAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.TerminalUIAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.ThemingAutoConfiguration__BeanDefinitions;
import org.springframework.shell.boot.UserConfigAutoConfiguration__BeanDefinitions;
import org.springframework.shell.result.ResultHandlerConfig__BeanDefinitions;

/**
 * Register bean definitions for the bean factory.
 */
@Generated
public class ToDoListApplication__BeanFactoryRegistrations {
  /**
   * Register the bean definitions.
   */
  public void registerBeanDefinitions(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerProcessor", EventListenerMethodProcessor__BeanDefinitions.getInternalEventListenerProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.context.event.internalEventListenerFactory", DefaultEventListenerFactory__BeanDefinitions.getInternalEventListenerFactoryBeanDefinition());
    beanFactory.registerBeanDefinition("toDoListApplication", ToDoListApplication__BeanDefinitions.getToDoListApplicationBeanDefinition());
    beanFactory.registerBeanDefinition("createTaskCommand", CreateTaskCommand__BeanDefinitions.getCreateTaskCommandBeanDefinition());
    beanFactory.registerBeanDefinition("deleteTaskCommand", DeleteTaskCommand__BeanDefinitions.getDeleteTaskCommandBeanDefinition());
    beanFactory.registerBeanDefinition("findTaskCommand", FindTaskCommand__BeanDefinitions.getFindTaskCommandBeanDefinition());
    beanFactory.registerBeanDefinition("listTasksCommand", ListTasksCommand__BeanDefinitions.getListTasksCommandBeanDefinition());
    beanFactory.registerBeanDefinition("updateTaskCommand", UpdateTaskCommand__BeanDefinitions.getUpdateTaskCommandBeanDefinition());
    beanFactory.registerBeanDefinition("jacksonConfig", JacksonConfig__BeanDefinitions.getJacksonConfigBeanDefinition());
    beanFactory.registerBeanDefinition("toDoService", ToDoService__BeanDefinitions.getToDoServiceBeanDefinition());
    beanFactory.registerBeanDefinition("objectMapper", JacksonConfig__BeanDefinitions.getObjectMapperBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.AutoConfigurationPackages", AutoConfigurationPackages__BeanDefinitions.BasePackages.getAutoConfigurationPackagesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertyPlaceholderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("propertySourcesPlaceholderConfigurer", PropertyPlaceholderAutoConfiguration__BeanDefinitions.getPropertySourcesPlaceholderConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration", AopAutoConfiguration__BeanDefinitions.ClassProxyingConfiguration.getClassProxyingConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("forceAutoProxyCreatorToUseClassProxying", AopAutoConfiguration__BeanDefinitions.ClassProxyingConfiguration.getForceAutoProxyCreatorToUseClassProxyingBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.aop.AopAutoConfiguration", AopAutoConfiguration__BeanDefinitions.getAopAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationAvailability", ApplicationAvailabilityAutoConfiguration__BeanDefinitions.getApplicationAvailabilityBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration", ValidationAutoConfiguration__BeanDefinitions.getValidationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultValidator", ValidationAutoConfiguration__BeanDefinitions.getDefaultValidatorBeanDefinition());
    beanFactory.registerBeanDefinition("methodValidationPostProcessor", ValidationAutoConfiguration__BeanDefinitions.getMethodValidationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJacksonMixinConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModuleEntries", JsonMixinModuleEntries__BeanDefinitions.getJsonMixinModuleEntriesBeanDefinition());
    beanFactory.registerBeanDefinition("jsonMixinModule", JacksonAutoConfiguration__BeanDefinitions.JacksonMixinConfiguration.getJsonMixinModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration", JacksonAutoConfiguration__BeanDefinitions.getJacksonAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("jsonComponentModule", JacksonAutoConfiguration__BeanDefinitions.getJsonComponentModuleBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration", ConfigurationPropertiesAutoConfiguration__BeanDefinitions.getConfigurationPropertiesAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor", ConfigurationPropertiesBindingPostProcessor__BeanDefinitions.getConfigurationPropertiesBindingPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.internalConfigurationPropertiesBinder", ConfigurationPropertiesBinder__BeanDefinitions.ConfigurationPropertiesBinderFactory.getInternalConfigurationPropertiesBinderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.BoundConfigurationProperties", BoundConfigurationProperties__BeanDefinitions.getBoundConfigurationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter", MethodValidationExcludeFilter__BeanDefinitions.getMethodValidationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lifecycleProcessor", LifecycleAutoConfiguration__BeanDefinitions.getLifecycleProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties", LifecycleProperties__BeanDefinitions.getLifecyclePropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration", ProjectInfoAutoConfiguration__BeanDefinitions.getProjectInfoAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties", ProjectInfoProperties__BeanDefinitions.getProjectInfoPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration", ReactorAutoConfiguration__BeanDefinitions.getReactorAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("reactorAutoConfigurationLazyInitializationExcludeFilter", ReactorAutoConfiguration__BeanDefinitions.getReactorAutoConfigurationLazyInitializationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("spring.reactor-org.springframework.boot.autoconfigure.reactor.ReactorProperties", ReactorProperties__BeanDefinitions.getReactorPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration", SqlInitializationAutoConfiguration__BeanDefinitions.getSqlInitializationAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties", SqlInitializationProperties__BeanDefinitions.getSqlInitializationPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor", DatabaseInitializationDependencyConfigurer__BeanDefinitions.DependsOnDatabaseInitializationPostProcessor.getDependsOnDatabaseInitializationPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration", SslAutoConfiguration__BeanDefinitions.getSslAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("fileWatcher", SslAutoConfiguration__BeanDefinitions.getFileWatcherBeanDefinition());
    beanFactory.registerBeanDefinition("sslPropertiesSslBundleRegistrar", SslAutoConfiguration__BeanDefinitions.getSslPropertiesSslBundleRegistrarBeanDefinition());
    beanFactory.registerBeanDefinition("sslBundleRegistry", SslAutoConfiguration__BeanDefinitions.getSslBundleRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("spring.ssl-org.springframework.boot.autoconfigure.ssl.SslProperties", SslProperties__BeanDefinitions.getSslPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskExecutorBuilder", TaskExecutorConfigurations__BeanDefinitions.ThreadPoolTaskExecutorBuilderConfiguration.getThreadPoolTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration", TaskExecutorConfigurations__BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskExecutorBuilder", TaskExecutorConfigurations__BeanDefinitions.SimpleAsyncTaskExecutorBuilderConfiguration.getSimpleAsyncTaskExecutorBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration", TaskExecutorConfigurations__BeanDefinitions.AsyncConfigurerConfiguration.getAsyncConfigurerConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutorAsyncConfigurer", TaskExecutorConfigurations__BeanDefinitions.AsyncConfigurerConfiguration.getApplicationTaskExecutorAsyncConfigurerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorConfiguration.getTaskExecutorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("applicationTaskExecutor", TaskExecutorConfigurations__BeanDefinitions.TaskExecutorConfiguration.getApplicationTaskExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$BootstrapExecutorConfiguration", TaskExecutorConfigurations__BeanDefinitions.BootstrapExecutorConfiguration.getBootstrapExecutorConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("bootstrapExecutorAliasPostProcessor", TaskExecutorConfigurations__BeanDefinitions.BootstrapExecutorConfiguration.getBootstrapExecutorAliasPostProcessorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration", TaskExecutionAutoConfiguration__BeanDefinitions.getTaskExecutionAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties", TaskExecutionProperties__BeanDefinitions.getTaskExecutionPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("threadPoolTaskSchedulerBuilder", TaskSchedulingConfigurations__BeanDefinitions.ThreadPoolTaskSchedulerBuilderConfiguration.getThreadPoolTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration", TaskSchedulingConfigurations__BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("simpleAsyncTaskSchedulerBuilder", TaskSchedulingConfigurations__BeanDefinitions.SimpleAsyncTaskSchedulerBuilderConfiguration.getSimpleAsyncTaskSchedulerBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration", TaskSchedulingAutoConfiguration__BeanDefinitions.getTaskSchedulingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties", TaskSchedulingProperties__BeanDefinitions.getTaskSchedulingPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.ApplicationRunnerAutoConfiguration", ApplicationRunnerAutoConfiguration__BeanDefinitions.getApplicationRunnerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultShellApplicationRunner", ApplicationRunnerAutoConfiguration__BeanDefinitions.getDefaultShellApplicationRunnerBeanDefinition());
    beanFactory.registerBeanDefinition("spring.shell-org.springframework.shell.boot.SpringShellProperties", SpringShellProperties__BeanDefinitions.getSpringShellPropertiesBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.CommandCatalogAutoConfiguration", CommandCatalogAutoConfiguration__BeanDefinitions.getCommandCatalogAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("commandCatalog", CommandCatalogAutoConfiguration__BeanDefinitions.getCommandCatalogBeanDefinition());
    beanFactory.registerBeanDefinition("defaultCommandCatalogCustomizer", CommandCatalogAutoConfiguration__BeanDefinitions.getDefaultCommandCatalogCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("helpOptionsCommandRegistrationCustomizer", CommandCatalogAutoConfiguration__BeanDefinitions.getHelpOptionsCommandRegistrationCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("commandRegistrationBuilderSupplier", CommandCatalogAutoConfiguration__BeanDefinitions.getCommandRegistrationBuilderSupplierBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.CompleterAutoConfiguration", CompleterAutoConfiguration__BeanDefinitions.getCompleterAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("completer", CompleterAutoConfiguration__BeanDefinitions.getCompleterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.ComponentFlowAutoConfiguration$ComponentFlowConfiguration", ComponentFlowAutoConfiguration__BeanDefinitions.ComponentFlowConfiguration.getComponentFlowConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("shellCommonComponentFlowCustomizer", ComponentFlowAutoConfiguration__BeanDefinitions.ComponentFlowConfiguration.getShellCommonComponentFlowCustomizerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.ComponentFlowAutoConfiguration", ComponentFlowAutoConfiguration__BeanDefinitions.getComponentFlowAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("componentFlowBuilder", ComponentFlowAutoConfiguration__BeanDefinitions.getComponentFlowBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.ExitCodeAutoConfiguration", ExitCodeAutoConfiguration__BeanDefinitions.getExitCodeAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("shellExitCodeExceptionMapper", ExitCodeAutoConfiguration__BeanDefinitions.getShellExitCodeExceptionMapperBeanDefinition());
    beanFactory.registerBeanDefinition("shellExitCodeMappingsExceptionMapper", ExitCodeAutoConfiguration__BeanDefinitions.getShellExitCodeMappingsExceptionMapperBeanDefinition());
    beanFactory.registerBeanDefinition("exitCodeExceptionProvider", ExitCodeAutoConfiguration__BeanDefinitions.getExitCodeExceptionProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.JLineAutoConfiguration$JLineHistoryConfiguration", JLineAutoConfiguration__BeanDefinitions.JLineHistoryConfiguration.getJLineHistoryConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("history", JLineAutoConfiguration__BeanDefinitions.JLineHistoryConfiguration.getHistoryBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.JLineAutoConfiguration", JLineAutoConfiguration__BeanDefinitions.getJLineAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.JLineShellAutoConfiguration", JLineShellAutoConfiguration__BeanDefinitions.getJLineShellAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("terminal", JLineShellAutoConfiguration__BeanDefinitions.getTerminalBeanDefinition());
    beanFactory.registerBeanDefinition("promptProvider", JLineShellAutoConfiguration__BeanDefinitions.getPromptProviderBeanDefinition());
    beanFactory.registerBeanDefinition("parser", JLineShellAutoConfiguration__BeanDefinitions.getParserBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.LineReaderAutoConfiguration", LineReaderAutoConfiguration__BeanDefinitions.getLineReaderAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("lineReader", LineReaderAutoConfiguration__BeanDefinitions.getLineReaderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.ParameterResolverAutoConfiguration", ParameterResolverAutoConfiguration__BeanDefinitions.getParameterResolverAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("defaultCompletionResolver", ParameterResolverAutoConfiguration__BeanDefinitions.getDefaultCompletionResolverBeanDefinition());
    beanFactory.registerBeanDefinition("commandExecutionHandlerMethodArgumentResolvers", ParameterResolverAutoConfiguration__BeanDefinitions.getCommandExecutionHandlerMethodArgumentResolversBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.ShellContextAutoConfiguration", ShellContextAutoConfiguration__BeanDefinitions.getShellContextAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("shellContext", ShellContextAutoConfiguration__BeanDefinitions.getShellContextBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.ShellRunnerAutoConfiguration$NonePrimaryCommandConfiguration", ShellRunnerAutoConfiguration__BeanDefinitions.NonePrimaryCommandConfiguration.getNonePrimaryCommandConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("interactiveApplicationRunner", ShellRunnerAutoConfiguration__BeanDefinitions.NonePrimaryCommandConfiguration.getInteractiveApplicationRunnerBeanDefinition());
    beanFactory.registerBeanDefinition("nonInteractiveApplicationRunner", ShellRunnerAutoConfiguration__BeanDefinitions.NonePrimaryCommandConfiguration.getNonInteractiveApplicationRunnerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.ShellRunnerAutoConfiguration", ShellRunnerAutoConfiguration__BeanDefinitions.getShellRunnerAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.result.ResultHandlerConfig", ResultHandlerConfig__BeanDefinitions.getResultHandlerConfigBeanDefinition());
    beanFactory.registerBeanDefinition("terminalSizeAwareResultHandler", ResultHandlerConfig__BeanDefinitions.getTerminalSizeAwareResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("attributedCharSequenceResultHandler", ResultHandlerConfig__BeanDefinitions.getAttributedCharSequenceResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("defaultResultHandler", ResultHandlerConfig__BeanDefinitions.getDefaultResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("parameterValidationExceptionResultHandler", ResultHandlerConfig__BeanDefinitions.getParameterValidationExceptionResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("commandParserExceptionResolver", ResultHandlerConfig__BeanDefinitions.getCommandParserExceptionResolverBeanDefinition());
    beanFactory.registerBeanDefinition("throwableResultHandler", ResultHandlerConfig__BeanDefinitions.getThrowableResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("commandNotFoundResultHandler", ResultHandlerConfig__BeanDefinitions.getCommandNotFoundResultHandlerBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.SpringShellAutoConfiguration", SpringShellAutoConfiguration__BeanDefinitions.getSpringShellAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("shellConversionServiceSupplier", SpringShellAutoConfiguration__BeanDefinitions.getShellConversionServiceSupplierBeanDefinition());
    beanFactory.registerBeanDefinition("resultHandlerService", SpringShellAutoConfiguration__BeanDefinitions.getResultHandlerServiceBeanDefinition());
    beanFactory.registerBeanDefinition("shell", SpringShellAutoConfiguration__BeanDefinitions.getShellBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.StandardAPIAutoConfiguration", StandardAPIAutoConfiguration__BeanDefinitions.getStandardAPIAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("commandValueProvider", StandardAPIAutoConfiguration__BeanDefinitions.getCommandValueProviderBeanDefinition());
    beanFactory.registerBeanDefinition("enumValueProvider", StandardAPIAutoConfiguration__BeanDefinitions.getEnumValueProviderBeanDefinition());
    beanFactory.registerBeanDefinition("fileValueProvider", StandardAPIAutoConfiguration__BeanDefinitions.getFileValueProviderBeanDefinition());
    beanFactory.registerBeanDefinition("standardMethodTargetResolver", StandardAPIAutoConfiguration__BeanDefinitions.getStandardMethodTargetResolverBeanDefinition());
    beanFactory.registerBeanDefinition("valueProviderLazyInitializationExcludeFilter", StandardAPIAutoConfiguration__BeanDefinitions.getValueProviderLazyInitializationExcludeFilterBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.StandardCommandsAutoConfiguration", StandardCommandsAutoConfiguration__BeanDefinitions.getStandardCommandsAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("help", StandardCommandsAutoConfiguration__BeanDefinitions.getHelpBeanDefinition());
    beanFactory.registerBeanDefinition("clear", StandardCommandsAutoConfiguration__BeanDefinitions.getClearBeanDefinition());
    beanFactory.registerBeanDefinition("quit", StandardCommandsAutoConfiguration__BeanDefinitions.getQuitBeanDefinition());
    beanFactory.registerBeanDefinition("stacktrace", StandardCommandsAutoConfiguration__BeanDefinitions.getStacktraceBeanDefinition());
    beanFactory.registerBeanDefinition("script", StandardCommandsAutoConfiguration__BeanDefinitions.getScriptBeanDefinition());
    beanFactory.registerBeanDefinition("historyCommand", StandardCommandsAutoConfiguration__BeanDefinitions.getHistoryCommandBeanDefinition());
    beanFactory.registerBeanDefinition("version", StandardCommandsAutoConfiguration__BeanDefinitions.getVersionBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.TerminalUIAutoConfiguration", TerminalUIAutoConfiguration__BeanDefinitions.getTerminalUIAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("terminalUIBuilder", TerminalUIAutoConfiguration__BeanDefinitions.getTerminalUIBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("viewComponentBuilder", TerminalUIAutoConfiguration__BeanDefinitions.getViewComponentBuilderBeanDefinition());
    beanFactory.registerBeanDefinition("viewComponentExecutor", TerminalUIAutoConfiguration__BeanDefinitions.getViewComponentExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.ThemingAutoConfiguration", ThemingAutoConfiguration__BeanDefinitions.getThemingAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("themeActive", ThemingAutoConfiguration__BeanDefinitions.getThemeActiveBeanDefinition());
    beanFactory.registerBeanDefinition("themeRegistry", ThemingAutoConfiguration__BeanDefinitions.getThemeRegistryBeanDefinition());
    beanFactory.registerBeanDefinition("shellThemeResolver", ThemingAutoConfiguration__BeanDefinitions.getShellThemeResolverBeanDefinition());
    beanFactory.registerBeanDefinition("templateExecutor", ThemingAutoConfiguration__BeanDefinitions.getTemplateExecutorBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.shell.boot.UserConfigAutoConfiguration", UserConfigAutoConfiguration__BeanDefinitions.getUserConfigAutoConfigurationBeanDefinition());
    beanFactory.registerBeanDefinition("userConfigPathProvider", UserConfigAutoConfiguration__BeanDefinitions.getUserConfigPathProviderBeanDefinition());
    beanFactory.registerBeanDefinition("org.springframework.aop.config.internalAutoProxyCreator", InfrastructureAdvisorAutoProxyCreator__BeanDefinitions.getInternalAutoProxyCreatorBeanDefinition());
  }

  /**
   * Register the aliases.
   */
  public void registerAliases(DefaultListableBeanFactory beanFactory) {
    beanFactory.registerAlias("applicationTaskExecutor", "bootstrapExecutor");
  }
}
